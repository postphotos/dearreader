# DearReader AI Configuration
# Simplified configuration for AI providers and tasks

ai_providers:
  # OpenRouter free models (API key required)
  deepseek/deepseek-r1:free:
    base_url: "https://openrouter.ai/api/v1"
    model: "deepseek/deepseek-r1:free"
    api_key: "${OPENROUTER_API_KEY}"

  meta-llama/llama-3.3-70b-instruct:free:
    base_url: "https://openrouter.ai/api/v1"
    model: "meta-llama/llama-3.3-70b-instruct:free"
    api_key: "${OPENROUTER_API_KEY}"

  qwen/qwen-2.5-72b-instruct:free:
    base_url: "https://openrouter.ai/api/v1"
    model: "qwen/qwen-2.5-72b-instruct:free"
    api_key: "${OPENROUTER_API_KEY}"

  google/gemma-3-27b-it:free:
    base_url: "https://openrouter.ai/api/v1"
    model: "google/gemma-3-27b-it:free"
    api_key: "${OPENROUTER_API_KEY}"

  mistralai/mistral-small-3.1-24b-instruct:free:
    base_url: "https://openrouter.ai/api/v1"
    model: "mistralai/mistral-small-3.1-24b-instruct:free"
    api_key: "${OPENROUTER_API_KEY}"

  # Provider aliases for tests (using your actual free APIs)
  openrouter-big:
    base_url: "https://openrouter.ai/api/v1"
    model: "deepseek/deepseek-r1:free"
    api_key: "${OPENROUTER_API_KEY}"
    temperature: 0.1
    max_tokens: 4096

  openrouter-small:
    base_url: "https://openrouter.ai/api/v1"
    model: "google/gemma-3-27b-it:free"
    api_key: "${OPENROUTER_API_KEY}"
    temperature: 0.2
    max_tokens: 2048

ai_tasks:
  parse_pdf: "openrouter-big"
  parse_pdf_backup: "openrouter-small"
  validate_format: "openrouter-small"
  validate_format_backup: "openrouter-big"
  edit_crawl: "openrouter-big"
  edit_crawl_backup: "openrouter-small"
  general_chat: "openrouter-small"
  general_chat_backup: "openrouter-big"
  code_analysis: "openrouter-big"
  code_analysis_backup: "openrouter-small"
  ocr_processing: "openrouter-small"
  ocr_processing_backup: "openrouter-big"
  sentiment_analysis: "openrouter-small"
  sentiment_analysis_backup: "openrouter-big"
  content_classification: "openrouter-small"
  content_classification_backup: "openrouter-big"
  default: "openrouter-small"
  default_backup: "openrouter-big"

# Task pipelines - allow tasks to nest other tasks
ai_task_pipelines:
  # Complex PDF processing pipeline
  process_pdf_comprehensive:
    - task: parse_pdf
      description: "Extract raw text from PDF"
    - task: validate_format
      description: "Validate extracted content format"
      depends_on: parse_pdf
    - task: content_classification
      description: "Classify content type and structure"
      depends_on: validate_format

  # OCR-enhanced PDF processing
  process_pdf_with_ocr:
    - task: parse_pdf
      description: "Extract text from PDF"
    - task: ocr_processing
      description: "Apply OCR for better text extraction"
      depends_on: parse_pdf
      condition: "low_confidence_text"
    - task: validate_format
      description: "Validate final content"
      depends_on: [parse_pdf, ocr_processing]

  # Content analysis pipeline
  analyze_content:
    - task: content_classification
      description: "Determine content type"
    - task: sentiment_analysis
      description: "Analyze sentiment and tone"
      depends_on: content_classification
    - task: general_chat
      description: "Generate insights and summary"
      depends_on: [content_classification, sentiment_analysis]

  # Code review pipeline
  review_code:
    - task: code_analysis
      description: "Analyze code structure and quality"
    - task: general_chat
      description: "Generate review comments and suggestions"
      depends_on: code_analysis
