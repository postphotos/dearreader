{
  "version": 3,
  "sources": ["../../../src/shared/logger.ts"],
  "sourcesContent": ["import { injectable } from 'tsyringe';\nimport winston from 'winston';\n\n// Create winston logger instance\nconst winstonLogger = winston.createLogger({\n  level: process.env.LOG_LEVEL || (process.env.NODE_ENV === 'production' ? 'info' : 'debug'),\n  format: winston.format.combine(\n    winston.format.timestamp({\n      format: 'YYYY-MM-DD HH:mm:ss'\n    }),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'dearreader' },\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.simple(),\n        winston.format.printf(({ timestamp, level, message, scope, ...meta }) => {\n          const metaStr = Object.keys(meta).length ? JSON.stringify(meta, null, 2) : '';\n          return `${timestamp} [${scope || 'App'}] ${level}: ${message} ${metaStr}`;\n        })\n      )\n    })\n  ]\n});\n\n// Add file transport for production\nif (process.env.NODE_ENV === 'production') {\n  winstonLogger.add(new winston.transports.File({ \n    filename: 'logs/error.log', \n    level: 'error',\n    maxsize: 5242880, // 5MB\n    maxFiles: 5\n  }));\n  winstonLogger.add(new winston.transports.File({ \n    filename: 'logs/combined.log',\n    maxsize: 5242880, // 5MB\n    maxFiles: 5\n  }));\n}\n\n@injectable()\nexport class Logger {\n    constructor(private name: string) {}\n\n    info(message: string, meta?: any) {\n        winstonLogger.info(message, { scope: this.name, ...meta });\n    }\n\n    warn(message: string, meta?: any) {\n        winstonLogger.warn(message, { scope: this.name, ...meta });\n    }\n\n    error(message: string, meta?: any) {\n        winstonLogger.error(message, { scope: this.name, ...meta });\n    }\n\n    debug(message: string, meta?: any) {\n        winstonLogger.debug(message, { scope: this.name, ...meta });\n    }\n\n    child(options: { service: string }): Logger {\n        return new Logger(`${this.name}:${options.service}`);\n    }\n\n    // Helper method for performance timing\n    time(label: string): void {\n        console.time(`[${this.name}] ${label}`);\n    }\n\n    timeEnd(label: string): void {\n        console.timeEnd(`[${this.name}] ${label}`);\n    }\n\n    // Helper for logging HTTP requests\n    httpRequest(method: string, url: string, statusCode?: number, responseTime?: number) {\n        this.info('HTTP Request', {\n            method,\n            url,\n            statusCode,\n            responseTime: responseTime ? `${responseTime}ms` : undefined\n        });\n    }\n\n    // Helper for logging errors with stack traces\n    errorWithStack(message: string, error: Error, meta?: any) {\n        this.error(message, {\n            error: {\n                name: error.name,\n                message: error.message,\n                stack: error.stack\n            },\n            ...meta\n        });\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
