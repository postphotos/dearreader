{
  "version": 3,
  "sources": ["../../../../src/shared/services/canvas.ts"],
  "sourcesContent": ["import { AsyncService } from 'civkit';\nimport { singleton } from 'tsyringe';\nimport { Logger } from '../logger.js';\n\n@singleton()\nexport class CanvasService extends AsyncService {\n    logger = new Logger('CanvasService')\n\n    constructor() {\n        super();\n    }\n\n    override async init() {\n        this.logger.info('CanvasService initialized');\n        this.emit('ready');\n    }\n\n    async loadImage(url: string): Promise<any> {\n        console.log(`Mock: Loading image from ${url}`);\n        return { width: 1000, height: 1000 };\n    }\n\n    fitImageToSquareBox(img: any, size: number): any {\n        console.log(`Mock: Fitting image to square box of size ${size}`);\n        return { width: size, height: size };\n    }\n\n    async canvasToBuffer(canvas: any, format: string): Promise<Buffer> {\n        console.log(`Mock: Converting canvas to buffer with format ${format}`);\n        return Buffer.from('mock image data');\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;AAC1B,SAAS,cAAc;AAGhB,IAAM,gBAAN,cAA4B,aAAa;AAAA,EAG5C,cAAc;AACV,UAAM;AAHV,kBAAS,IAAI,OAAO,eAAe;AAAA,EAInC;AAAA,EAEA,MAAe,OAAO;AAClB,SAAK,OAAO,KAAK,2BAA2B;AAC5C,SAAK,KAAK,OAAO;AAAA,EACrB;AAAA,EAEA,MAAM,UAAU,KAA2B;AACvC,YAAQ,IAAI,4BAA4B,GAAG,EAAE;AAC7C,WAAO,EAAE,OAAO,KAAM,QAAQ,IAAK;AAAA,EACvC;AAAA,EAEA,oBAAoB,KAAU,MAAmB;AAC7C,YAAQ,IAAI,6CAA6C,IAAI,EAAE;AAC/D,WAAO,EAAE,OAAO,MAAM,QAAQ,KAAK;AAAA,EACvC;AAAA,EAEA,MAAM,eAAe,QAAa,QAAiC;AAC/D,YAAQ,IAAI,iDAAiD,MAAM,EAAE;AACrE,WAAO,OAAO,KAAK,iBAAiB;AAAA,EACxC;AACJ;AA1Ba,gBAAN;AAAA,EADN,UAAU;AAAA,GACE;",
  "names": []
}
