{
  "version": 3,
  "sources": ["../../../src/dto/scrapping-options.ts"],
  "sourcesContent": ["import { Also, AutoCastable, Prop, AutoCastableMetaClass, Constructor } from 'civkit'; // Adjust the import based on where your decorators are defined\nimport type { Request } from 'express';\nimport type { CookieParam } from 'puppeteer';\nimport { parseString as parseSetCookieString } from 'set-cookie-parser';\n\n\n@Also({\n    openapi: {\n        operation: {\n            parameters: {\n                'Accept': {\n                    description: `Specifies your preference for the response format.\\n\\n` +\n                        `Supported formats: \\n` +\n                        `- text/event-stream\\n` +\n                        `- application/json or text/json\\n` +\n                        `- text/plain`\n                    ,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Cache-Tolerance': {\n                    description: `Sets internal cache tolerance in seconds if this header is specified with a integer.`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-No-Cache': {\n                    description: `Ignores internal cache if this header is specified with a value.\\n\\nEquivalent to X-Cache-Tolerance: 0`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Respond-With': {\n                    description: `Specifies the (non-default) form factor of the crawled data you prefer.\\n\\n` +\n                        `Supported formats: \\n` +\n                        `- markdown\\n` +\n                        `- html\\n` +\n                        `- text\\n` +\n                        `- pageshot\\n` +\n                        `- screenshot\\n`\n                    ,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Wait-For-Selector': {\n                    description: `Specifies a CSS selector to wait for the appearance of such an element before returning.\\n\\n` +\n                        'Example: `X-Wait-For-Selector: .content-block`\\n'\n                    ,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Target-Selector': {\n                    description: `Specifies a CSS selector for return target instead of the full html.\\n\\n` +\n                        'Implies `X-Wait-For-Selector: (same selector)`'\n                    ,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Remove-Selector': {\n                    description: `Specifies a CSS selector to remove elements from the full html.\\n\\n` +\n                        'Example `X-Remove-Selector: nav`'\n                    ,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Keep-Img-Data-Url': {\n                    description: `Keep data-url as it instead of transforming them to object-url. (Only applicable when targeting markdown format)\\n\\n` +\n                        'Example `X-Keep-Img-Data-Url: true`'\n                    ,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Proxy-Url': {\n                    description: `Specifies your custom proxy if you prefer to use one.\\n\\n` +\n                        `Supported protocols: \\n` +\n                        `- http\\n` +\n                        `- https\\n` +\n                        `- socks4\\n` +\n                        `- socks5\\n\\n` +\n                        `For authentication, https://user:pass@host:port`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Set-Cookie': {\n                    description: `Sets cookie(s) to the headless browser for your request. \\n\\n` +\n                        `Syntax is the same with standard Set-Cookie`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-With-Generated-Alt': {\n                    description: `Enable automatic alt-text generating for images without an meaningful alt-text.\\n\\n` +\n                        `Note: Does not work when \\`X-Respond-With\\` is specified`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-With-Images-Summary': {\n                    description: `Enable dedicated summary section for images on the page.`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-With-links-Summary': {\n                    description: `Enable dedicated summary section for hyper links on the page.`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-User-Agent': {\n                    description: `Override User-Agent.`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n                'X-Timeout': {\n                    description: `Specify timeout in seconds. Max 180.`,\n                    in: 'header',\n                    schema: { type: 'string' }\n                },\n            }\n        }\n    }\n})\nexport class CrawlerOptions extends AutoCastable implements AutoCastableMetaClass {\n\n    @Prop()\n    url?: string;\n\n    @Prop()\n    html?: string;\n\n    @Prop({\n        default: 'default',\n    })\n    respondWith!: string;\n\n    @Prop({\n        default: false,\n    })\n    withGeneratedAlt!: boolean;\n\n    @Prop({\n        default: false,\n    })\n    withLinksSummary!: boolean;\n\n    @Prop({\n        default: false,\n    })\n    withImagesSummary!: boolean;\n\n    @Prop({\n        default: false,\n    })\n    noCache!: boolean;\n\n    @Prop()\n    cacheTolerance?: number;\n\n    @Prop({ arrayOf: String })\n    targetSelector?: string | string[];\n\n    @Prop({ arrayOf: String })\n    waitForSelector?: string | string[];\n\n    @Prop({ arrayOf: String })\n    removeSelector?: string | string[];\n\n    @Prop({\n        default: false,\n    })\n    keepImgDataUrl!: boolean;\n\n    @Prop({\n        default: false,\n    })\n    withIframe!: boolean;\n\n    @Prop({\n        arrayOf: String,\n    })\n    setCookies?: CookieParam[];\n\n    @Prop()\n    proxyUrl?: string;\n\n    @Prop()\n    userAgent?: string;\n\n    @Prop({\n        validate: (v: number) => v > 0 && v <= 180,\n        type: Number,\n        nullable: true,\n    })\n    timeout?: number | null;\n\n    @Prop({\n        type: Number,\n        nullable: true,\n    })\n    viewportWidth?: number | null;\n\n    @Prop({\n        type: Number,\n        nullable: true,\n    })\n    viewportHeight?: number | null;\n\n    @Prop({\n        default: false,\n    })\n    fullPage?: boolean;\n\n    @Prop()\n    pdfAction?: string;\n\n    static override from<T extends CrawlerOptions>(this: Constructor<T>, input: any, ...args: any[]): T {\n        const instance = super.from(input, ...args) as T;\n        const req = args[0] as Request | undefined;\n\n        if (req) {\n            console.log('Request headers:', req.headers);\n\n            const getHeader = (name: string): string | undefined => {\n                const value = req.headers[name.toLowerCase()];\n                return Array.isArray(value) ? value[0] : value;\n            };\n\n            const customMode = getHeader('X-Respond-With') || getHeader('X-Return-Format');\n            if (customMode) {\n                instance.respondWith = customMode;\n            }\n\n            const withGeneratedAlt = getHeader('X-With-Generated-Alt');\n            if (withGeneratedAlt !== undefined) {\n                instance.withGeneratedAlt = withGeneratedAlt.toLowerCase() === 'true';\n            }\n\n            const withLinksSummary = getHeader('x-with-links-summary');\n            if (withLinksSummary !== undefined) {\n                instance.withLinksSummary = Boolean(withLinksSummary);\n            }\n\n            const withImagesSummary = getHeader('x-with-images-summary');\n            if (withImagesSummary !== undefined) {\n                instance.withImagesSummary = Boolean(withImagesSummary);\n            }\n\n            const noCache = getHeader('x-no-cache');\n            if (noCache !== undefined) {\n                instance.noCache = Boolean(noCache);\n            }\n\n            if (instance.noCache && instance.cacheTolerance === undefined) {\n                instance.cacheTolerance = 0;\n            }\n\n            let cacheTolerance = parseInt(getHeader('x-cache-tolerance') || '');\n            if (!isNaN(cacheTolerance)) {\n                instance.cacheTolerance = cacheTolerance;\n            }\n\n            let timeoutSeconds = parseInt(getHeader('x-timeout') || '');\n            if (!isNaN(timeoutSeconds) && timeoutSeconds > 0) {\n                instance.timeout = timeoutSeconds <= 180 ? timeoutSeconds : 180;\n            } else if (getHeader('x-timeout')) {\n                instance.timeout = null;\n            }\n\n            const removeSelector = getHeader('x-remove-selector')?.split(', ');\n            instance.removeSelector ??= removeSelector;\n\n            const targetSelector = getHeader('x-target-selector')?.split(', ');\n            instance.targetSelector ??= targetSelector;\n\n            const waitForSelector = getHeader('x-wait-for-selector')?.split(', ');\n            instance.waitForSelector ??= waitForSelector || instance.targetSelector;\n\n            instance.targetSelector = filterSelector(instance.targetSelector);\n\n            const overrideUserAgent = getHeader('x-user-agent');\n            instance.userAgent ??= overrideUserAgent;\n\n            const keepImgDataUrl = getHeader('x-keep-img-data-url');\n            if (keepImgDataUrl !== undefined) {\n                instance.keepImgDataUrl = Boolean(keepImgDataUrl);\n            }\n\n            const withIframe = getHeader('x-with-iframe');\n            if (withIframe !== undefined) {\n                instance.withIframe = Boolean(withIframe);\n            }\n\n            if (instance.withIframe) {\n                instance.timeout ??= null;\n            }\n\n            // Viewport options\n            let viewportWidth = parseInt(getHeader('x-viewport-width') || '');\n            if (!isNaN(viewportWidth) && viewportWidth > 0) {\n                instance.viewportWidth = viewportWidth;\n            }\n\n            let viewportHeight = parseInt(getHeader('x-viewport-height') || '');\n            if (!isNaN(viewportHeight) && viewportHeight > 0) {\n                instance.viewportHeight = viewportHeight;\n            }\n\n            const fullPage = getHeader('x-full-page');\n            if (fullPage !== undefined) {\n                instance.fullPage = fullPage.toLowerCase() === 'true';\n            }\n\n            // PDF action\n            const pdfAction = getHeader('x-pdf-action');\n            if (pdfAction) {\n                instance.pdfAction = pdfAction;\n            }\n\n            const cookies: CookieParam[] = [];\n            const setCookieHeaders = getHeader('x-set-cookie')?.split(', ') || (instance.setCookies as any as string[]);\n            if (Array.isArray(setCookieHeaders)) {\n                for (const setCookie of setCookieHeaders) {\n                    const parsed = parseSetCookieString(setCookie, { decodeValues: false });\n                    if (Array.isArray(parsed)) {\n                        for (const p of parsed) {\n                            cookies.push({\n                                name: p.name,\n                                value: p.value,\n                                url: p.url,\n                                domain: p.domain,\n                                path: p.path,\n                                secure: p.secure,\n                                httpOnly: p.httpOnly,\n                                sameSite: p.sameSite as any,\n                                expires: typeof p.expires === 'number' ? p.expires : (p.expires instanceof Date ? Math.floor(p.expires.getTime() / 1000) : undefined),\n                            });\n                        }\n                    } else if (parsed && typeof parsed === 'object') {\n                        const p = parsed as any;\n                        cookies.push({\n                            name: p.name,\n                            value: p.value,\n                            url: p.url,\n                            domain: p.domain,\n                            path: p.path,\n                            secure: p.secure,\n                            httpOnly: p.httpOnly,\n                            sameSite: p.sameSite as any,\n                            expires: typeof p.expires === 'number' ? p.expires : (p.expires instanceof Date ? Math.floor(p.expires.getTime() / 1000) : undefined),\n                        });\n                    }\n                }\n            } else if (setCookieHeaders && typeof setCookieHeaders === 'string') {\n                const parsed = parseSetCookieString(setCookieHeaders, { decodeValues: false });\n                if (Array.isArray(parsed)) {\n                    for (const p of parsed) {\n                        cookies.push({\n                            name: p.name,\n                            value: p.value,\n                            url: p.url,\n                            domain: p.domain,\n                            path: p.path,\n                            secure: p.secure,\n                            httpOnly: p.httpOnly,\n                            sameSite: p.sameSite as any,\n                            expires: typeof p.expires === 'number' ? p.expires : (p.expires instanceof Date ? Math.floor(p.expires.getTime() / 1000) : undefined),\n                        });\n                    }\n                } else if (parsed && typeof parsed === 'object') {\n                    const p = parsed as any;\n                    cookies.push({\n                        name: p.name,\n                        value: p.value,\n                        url: p.url,\n                        domain: p.domain,\n                        path: p.path,\n                        secure: p.secure,\n                        httpOnly: p.httpOnly,\n                        sameSite: p.sameSite as any,\n                        expires: typeof p.expires === 'number' ? p.expires : (p.expires instanceof Date ? Math.floor(p.expires.getTime() / 1000) : undefined),\n                    });\n                }\n            }\n\n            const proxyUrl = getHeader('x-proxy-url');\n            instance.proxyUrl ??= proxyUrl;\n\n            if (instance.cacheTolerance) {\n                instance.cacheTolerance = instance.cacheTolerance * 1000;\n            }\n        }\n\n        return instance;\n    }\n}\n\nexport class CrawlerOptionsHeaderOnly extends CrawlerOptions {\n    static override from<T extends CrawlerOptionsHeaderOnly>(this: Constructor<T>, ...args: any[]): T {\n        const req = args[0] as Request;\n        return super.from({}, req) as T;\n    }\n}\n\nfunction filterSelector(s?: string | string[]) {\n    if (!s) {\n        return s;\n    }\n    const sr = Array.isArray(s) ? s : [s];\n    const selectors = sr.filter((i)=> {\n        const innerSelectors = i.split(',').map((s) => s.trim());\n        const someViolation = innerSelectors.find((x) => x.startsWith('*') || x.startsWith(':') || x.includes('*:'));\n        if (someViolation) {\n            return false;\n        }\n        return true;\n    })\n\n    return selectors;\n};\n"],
  "mappings": "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",
  "names": ["s"]
}
