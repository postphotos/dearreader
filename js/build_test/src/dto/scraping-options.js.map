{
  "version": 3,
  "sources": ["../../../src/dto/scraping-options.ts"],
  "sourcesContent": ["import { Also, AutoCastable, Prop, AutoCastableMetaClass, Constructor } from 'civkit';\nimport type { Request } from 'express';\nimport type { CookieParam } from 'puppeteer';\nimport { parseString as parseSetCookieString } from 'set-cookie-parser';\n\n@Also({\n    openapi: {\n        operation: {\n            parameters: {\n                'Accept': { description: 'Preferred response format', in: 'header', schema: { type: 'string' } },\n                'X-Respond-With': { description: 'Preferred response form (markdown|html|text|pageshot|screenshot)', in: 'header', schema: { type: 'string' } },\n                'X-Wait-For-Selector': { description: 'CSS selector to wait for', in: 'header', schema: { type: 'string' } },\n                'X-Target-Selector': { description: 'CSS selector to extract only', in: 'header', schema: { type: 'string' } },\n                'X-Remove-Selector': { description: 'CSS selector to remove from output', in: 'header', schema: { type: 'string' } },\n                'X-Proxy-Url': { description: 'Proxy URL for browsing', in: 'header', schema: { type: 'string' } },\n                'X-Set-Cookie': { description: 'Set-Cookie header(s) for the browser', in: 'header', schema: { type: 'string' } },\n                'X-Viewport-Width': { description: 'Viewport width in pixels', in: 'header', schema: { type: 'string' } },\n                'X-Viewport-Height': { description: 'Viewport height in pixels', in: 'header', schema: { type: 'string' } },\n                'X-Full-Page': { description: 'Capture full page (true|false)', in: 'header', schema: { type: 'string' } },\n                'X-PDF-Action': { description: 'PDF-specific action', in: 'header', schema: { type: 'string' } },\n                'X-Timeout': { description: 'Timeout in seconds (max 180)', in: 'header', schema: { type: 'string' } }\n            }\n        }\n    }\n})\nexport class CrawlerOptions extends AutoCastable implements AutoCastableMetaClass {\n    @Prop() url?: string;\n    @Prop() html?: string;\n    @Prop({ default: 'default' }) respondWith!: string;\n    @Prop({ default: false }) withGeneratedAlt!: boolean;\n    @Prop({ default: false }) withLinksSummary!: boolean;\n    @Prop({ default: false }) withImagesSummary!: boolean;\n    @Prop({ default: false }) noCache!: boolean;\n    @Prop() cacheTolerance?: number;\n    @Prop({ arrayOf: String }) targetSelector?: string | string[];\n    @Prop({ arrayOf: String }) waitForSelector?: string | string[];\n    @Prop({ arrayOf: String }) removeSelector?: string | string[];\n    @Prop({ default: false }) keepImgDataUrl!: boolean;\n    @Prop({ default: false }) withIframe!: boolean;\n    @Prop({ arrayOf: String }) setCookies?: CookieParam[];\n    @Prop() proxyUrl?: string;\n    @Prop() userAgent?: string;\n    @Prop({ validate: (v: number) => v > 0 && v <= 180, type: Number, nullable: true }) timeout?: number | null;\n    @Prop({ type: Number, nullable: true }) viewportWidth?: number | null;\n    @Prop({ type: Number, nullable: true }) viewportHeight?: number | null;\n    @Prop({ default: false }) fullPage?: boolean;\n    @Prop() pdfAction?: string;\n    // New AI and filtering options\n    @Prop({ default: null }) aiEnabled?: boolean | null;\n    @Prop() format?: string;\n    @Prop() apiKey?: string;\n    @Prop() model?: string;\n    @Prop() prompt?: string;\n    @Prop() excludeFileTypes?: string;\n    @Prop() excludeUrlPatterns?: string;\n    @Prop() customHeaders?: string;\n\n    static override from<T extends CrawlerOptions>(this: Constructor<T>, input: any, ...args: any[]): T {\n        const instance = super.from(input, ...args) as T;\n        const req = args[0] as Request | undefined;\n\n        if (req) {\n            const getHeader = (name: string): string | undefined => {\n                const value = req.headers[name.toLowerCase()];\n                return Array.isArray(value) ? value[0] : value;\n            };\n\n            const customMode = getHeader('X-Respond-With') || getHeader('X-Return-Format');\n            if (customMode) instance.respondWith = customMode;\n\n            const withGeneratedAlt = getHeader('X-With-Generated-Alt');\n            if (withGeneratedAlt !== undefined) instance.withGeneratedAlt = withGeneratedAlt.toLowerCase() === 'true';\n\n            const keepImgDataUrl = getHeader('x-keep-img-data-url');\n            if (keepImgDataUrl !== undefined) instance.keepImgDataUrl = Boolean(keepImgDataUrl);\n\n            let timeoutSeconds = parseInt(getHeader('x-timeout') || '');\n            if (!isNaN(timeoutSeconds) && timeoutSeconds > 0) instance.timeout = timeoutSeconds <= 180 ? timeoutSeconds : 180;\n            else if (getHeader('x-timeout')) instance.timeout = null;\n\n            // Viewport\n            let viewportWidth = parseInt(getHeader('x-viewport-width') || '');\n            if (!isNaN(viewportWidth) && viewportWidth > 0) instance.viewportWidth = viewportWidth;\n            let viewportHeight = parseInt(getHeader('x-viewport-height') || '');\n            if (!isNaN(viewportHeight) && viewportHeight > 0) instance.viewportHeight = viewportHeight;\n\n            const fullPage = getHeader('x-full-page');\n            if (fullPage !== undefined) instance.fullPage = fullPage.toLowerCase() === 'true';\n\n            const pdfAction = getHeader('x-pdf-action');\n            if (pdfAction) instance.pdfAction = pdfAction;\n\n            const removeSelector = getHeader('x-remove-selector')?.split(', ');\n            instance.removeSelector ??= removeSelector;\n\n            const targetSelector = getHeader('x-target-selector')?.split(', ');\n            instance.targetSelector ??= targetSelector;\n\n            const waitForSelector = getHeader('x-wait-for-selector')?.split(', ');\n            instance.waitForSelector ??= waitForSelector || instance.targetSelector;\n\n            instance.targetSelector = filterSelector(instance.targetSelector);\n\n            const overrideUserAgent = getHeader('x-user-agent');\n            instance.userAgent ??= overrideUserAgent;\n\n            const setCookieHeaders = getHeader('x-set-cookie')?.split(', ') || (instance.setCookies as any as string[]);\n            const cookies: CookieParam[] = [];\n            if (Array.isArray(setCookieHeaders)) {\n                for (const setCookie of setCookieHeaders) {\n                    const parsed = parseSetCookieString(setCookie, { decodeValues: false });\n                    if (Array.isArray(parsed)) {\n                        for (const p of parsed) {\n                            cookies.push({\n                                name: p.name,\n                                value: p.value,\n                                url: p.url,\n                                domain: p.domain,\n                                path: p.path,\n                                secure: p.secure,\n                                httpOnly: p.httpOnly,\n                                sameSite: p.sameSite as any,\n                                expires: typeof p.expires === 'number' ? p.expires : (p.expires instanceof Date ? Math.floor(p.expires.getTime() / 1000) : undefined),\n                            });\n                        }\n                    } else if (parsed && typeof parsed === 'object') {\n                        const p = parsed as any;\n                        cookies.push({\n                            name: p.name,\n                            value: p.value,\n                            url: p.url,\n                            domain: p.domain,\n                            path: p.path,\n                            secure: p.secure,\n                            httpOnly: p.httpOnly,\n                            sameSite: p.sameSite as any,\n                            expires: typeof p.expires === 'number' ? p.expires : (p.expires instanceof Date ? Math.floor(p.expires.getTime() / 1000) : undefined),\n                        });\n                    }\n                }\n            }\n            if (cookies.length) instance.setCookies = cookies;\n\n            const proxyUrl = getHeader('x-proxy-url');\n            instance.proxyUrl ??= proxyUrl;\n\n            if (instance.cacheTolerance) instance.cacheTolerance = instance.cacheTolerance * 1000;\n\n            // Handle new AI and filtering parameters from query\n            if (input.ai_enabled !== undefined) instance.aiEnabled = Boolean(input.ai_enabled);\n            if (input.format) instance.format = String(input.format);\n            if (input.api_key) instance.apiKey = String(input.api_key);\n            if (input.model) instance.model = String(input.model);\n            if (input.prompt) instance.prompt = String(input.prompt);\n            if (input.exclude_file_types) instance.excludeFileTypes = String(input.exclude_file_types);\n            if (input.exclude_url_patterns) instance.excludeUrlPatterns = String(input.exclude_url_patterns);\n            if (input.custom_headers) instance.customHeaders = String(input.custom_headers);\n        }\n\n        return instance;\n    }\n}\n\nexport class CrawlerOptionsHeaderOnly extends CrawlerOptions {\n    static override from<T extends CrawlerOptionsHeaderOnly>(this: Constructor<T>, ...args: any[]): T {\n        const req = args[0] as Request;\n        return super.from({}, req) as T;\n    }\n}\n\n// Minimal helper kept local\nfunction filterSelector(s?: string | string[]) {\n    if (!s) return s;\n    const sr = Array.isArray(s) ? s : [s];\n    const selectors = sr.filter((i) => {\n        const innerSelectors = i.split(',').map((s) => s.trim());\n        const someViolation = innerSelectors.find((x) => x.startsWith('*') || x.startsWith(':') || x.includes('*:'));\n        if (someViolation) return false;\n        return true;\n    });\n    return selectors;\n}\n"],
  "mappings": "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",
  "names": ["s"]
}
