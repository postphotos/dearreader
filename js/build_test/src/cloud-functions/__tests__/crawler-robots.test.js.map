{
  "version": 3,
  "sources": ["../../../../src/cloud-functions/__tests__/crawler-robots.test.ts"],
  "sourcesContent": ["import { expect } from 'chai';\n\n// Import the crawler ESM module for tests\nimport { CrawlerHost } from '../crawler.js';\n\ndescribe('CrawlerHost Robots Checker Edge Cases', () => {\n  it('should proceed when robotsChecker is missing methods', async () => {\n    const crawler = new CrawlerHost(\n      // minimal mocks: puppeteerControl, jsdomControl, pdfExtractor, robotsChecker, storage, threadLocal\n  ({ scrape: async function* (_: URL) { yield { title: 'X', href: 'http://example/', html: '<html></html>', text: 'X', parsed: { title: 'X', content: 'X', excerpt: 'X' }, imgs: [] }; }, _sn: 'mock', browser: null, logger: console, startTime: Date.now(), circuitBreakerHosts: new Set(), on: () => {}, emit: () => {} } as any),\n  ( { inferSnapshot: (s:any) => s, narrowSnapshot: (s:any) => s, runTurndown: () => 'ok' } as any),\n  ( { extract: async () => ({ content: 'pdf' }) } as any),\n  // robotsChecker provided but without isAllowed/getCrawlDelay\n  ( { check: async () => true } as any),\n  ( {} as any),\n  ( { _data: new Map(), get: () => undefined, set: () => {} } as any)\n    );\n\n    const req: any = { url: '/https://www.ala.org', method: 'GET', query: {}, headers: { accept: 'application/json' }, hostname: 'localhost' };\n    const res: any = { _status: 200, _data: null, status(code:number){ this._status = code; return this; }, type(){ return this; }, send(data:any){ this._data = data; } };\n\n    await crawler.crawl(req, res as any);\n\n    expect(res._data).to.exist;\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,cAAc;AAGvB,SAAS,mBAAmB;AAE5B,SAAS,yCAAyC,MAAM;AACtD,KAAG,wDAAwD,YAAY;AACrE,UAAM,UAAU,IAAI;AAAA;AAAA,MAErB,EAAE,QAAQ,iBAAiB,GAAQ;AAAE,cAAM,EAAE,OAAO,KAAK,MAAM,mBAAmB,MAAM,iBAAiB,MAAM,KAAK,QAAQ,EAAE,OAAO,KAAK,SAAS,KAAK,SAAS,IAAI,GAAG,MAAM,CAAC,EAAE;AAAA,MAAG,GAAG,KAAK,QAAQ,SAAS,MAAM,QAAQ,SAAS,WAAW,KAAK,IAAI,GAAG,qBAAqB,oBAAI,IAAI,GAAG,IAAI,MAAM;AAAA,MAAC,GAAG,MAAM,MAAM;AAAA,MAAC,EAAE;AAAA,MACvT,EAAE,eAAe,CAAC,MAAU,GAAG,gBAAgB,CAAC,MAAU,GAAG,aAAa,MAAM,KAAK;AAAA,MACrF,EAAE,SAAS,aAAa,EAAE,SAAS,MAAM,GAAG;AAAA;AAAA,MAE5C,EAAE,OAAO,YAAY,KAAK;AAAA,MAC1B,CAAC;AAAA,MACD,EAAE,OAAO,oBAAI,IAAI,GAAG,KAAK,MAAM,QAAW,KAAK,MAAM;AAAA,MAAC,EAAE;AAAA,IACxD;AAEA,UAAM,MAAW,EAAE,KAAK,wBAAwB,QAAQ,OAAO,OAAO,CAAC,GAAG,SAAS,EAAE,QAAQ,mBAAmB,GAAG,UAAU,YAAY;AACzI,UAAM,MAAW,EAAE,SAAS,KAAK,OAAO,MAAM,OAAO,MAAY;AAAE,WAAK,UAAU;AAAM,aAAO;AAAA,IAAM,GAAG,OAAM;AAAE,aAAO;AAAA,IAAM,GAAG,KAAK,MAAS;AAAE,WAAK,QAAQ;AAAA,IAAM,EAAE;AAErK,UAAM,QAAQ,MAAM,KAAK,GAAU;AAEnC,WAAO,IAAI,KAAK,EAAE,GAAG;AAAA,EACvB,CAAC;AACH,CAAC;",
  "names": []
}
