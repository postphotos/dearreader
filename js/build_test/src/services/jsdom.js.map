{
  "version": 3,
  "sources": ["../../../src/services/jsdom.ts"],
  "sourcesContent": ["import { container, singleton } from 'tsyringe';\nimport { AsyncService, marshalErrorLike } from 'civkit';\nimport { Logger } from '../shared/index.js';\nimport { ExtendedSnapshot, PageSnapshot } from './puppeteer.js';\nimport { JSDOM, VirtualConsole } from 'jsdom';\nimport { Readability } from '@mozilla/readability';\nimport TurndownService from 'turndown';\n\nconst virtualConsole = new VirtualConsole();\nvirtualConsole.on('error', () => void 0);\n\n@singleton()\nexport class JSDomControl extends AsyncService {\n\n    logger = new Logger('CHANGE_LOGGER_NAME')\n\n    constructor(\n    ) {\n        super(...arguments);\n    }\n\n    override async init() {\n        await this.dependencyReady();\n        this.emit('ready');\n    }\n\n    narrowSnapshot(snapshot: PageSnapshot | undefined, options?: {\n        targetSelector?: string | string[];\n        removeSelector?: string | string[];\n        withIframe?: boolean;\n    }): PageSnapshot | undefined {\n        if (snapshot?.parsed && !options?.targetSelector && !options?.removeSelector && !options?.withIframe) {\n            return snapshot;\n        }\n        if (!snapshot?.html) {\n            return snapshot;\n        }\n        const t0 = Date.now();\n        const jsdom = new JSDOM(snapshot.html, { url: snapshot.href, virtualConsole });\n        const allNodes: Element[] = [];\n        jsdom.window.document.querySelectorAll('svg').forEach((x) => x.innerHTML = '');\n        if (options?.withIframe) {\n            jsdom.window.document.querySelectorAll('iframe[src],frame[src]').forEach((x) => {\n                const src = x.getAttribute('src');\n                const thisSnapshot = snapshot.childFrames?.find((f) => f.href === src);\n                if (thisSnapshot?.html) {\n                    x.innerHTML = thisSnapshot.html;\n                    x.querySelectorAll('script, style').forEach((s) => s.remove());\n                    x.querySelectorAll('[src]').forEach((el) => {\n                        el.setAttribute('src', new URL(el.getAttribute('src')!, src!).toString());\n                    });\n                    x.querySelectorAll('[href]').forEach((el) => {\n                        el.setAttribute('href', new URL(el.getAttribute('href')!, src!).toString());\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(options?.removeSelector)) {\n            for (const rl of options!.removeSelector) {\n                jsdom.window.document.querySelectorAll(rl).forEach((x) => x.remove());\n            }\n        } else if (options?.removeSelector) {\n            jsdom.window.document.querySelectorAll(options.removeSelector).forEach((x) => x.remove());\n        }\n\n        if (Array.isArray(options?.targetSelector)) {\n            for (const x of options!.targetSelector.map((x) => jsdom.window.document.querySelectorAll(x))) {\n                x.forEach((el) => {\n                    if (!allNodes.includes(el)) {\n                        allNodes.push(el);\n                    }\n                });\n            }\n        } else if (options?.targetSelector) {\n            jsdom.window.document.querySelectorAll(options.targetSelector).forEach((el) => {\n                if (!allNodes.includes(el)) {\n                    allNodes.push(el);\n                }\n            });\n        } else {\n            allNodes.push(jsdom.window.document.documentElement);\n        }\n\n        if (!allNodes.length) {\n            return snapshot;\n        }\n        const textChunks: string[] = [];\n        let rootDoc: Document;\n        if (allNodes.length === 1 && allNodes[0].nodeName === 'HTML') {\n            rootDoc = allNodes[0].ownerDocument!;\n            if (rootDoc.body.textContent) {\n                textChunks.push(rootDoc.body.textContent);\n            }\n        } else {\n            rootDoc = new JSDOM('', { url: snapshot.href, virtualConsole }).window.document;\n            for (const n of allNodes) {\n                rootDoc.body.appendChild(n);\n                rootDoc.body.appendChild(rootDoc.createTextNode('\\n\\n'));\n                if (n.textContent) {\n                    textChunks.push(n.textContent);\n                }\n            }\n        }\n\n        let parsed: any;\n        try {\n            parsed = new Readability(rootDoc.cloneNode(true) as any).parse();\n        } catch (err: any) {\n            this.logger.warn(`Failed to parse selected element`, { err: marshalErrorLike(err) });\n        }\n\n        // No innerText in jsdom\n        // https://github.com/jsdom/jsdom/issues/1245\n        const textContent = textChunks.join('\\n\\n');\n        const cleanedText = textContent?.split('\\n').map((x: any) => x.trimEnd()).join('\\n').replace(/\\n{3,}/g, '\\n\\n');\n\n        const imageTags = Array.from(rootDoc.querySelectorAll('img[src],img[data-src]'))\n            .map((x: any) => [x.getAttribute('src'), x.getAttribute('data-src')])\n            .flat()\n            .map((x) => {\n                try {\n                    return new URL(x, snapshot.rebase || snapshot.href).toString();\n                } catch (err) {\n                    return null;\n                }\n            })\n            .filter(Boolean);\n\n        const imageSet = new Set(imageTags);\n\n        const r = {\n            ...snapshot,\n            title: snapshot.title || jsdom.window.document.title,\n            parsed,\n            html: rootDoc.documentElement.outerHTML,\n            text: cleanedText,\n            imgs: snapshot.imgs?.filter((x) => imageSet.has(x.src)) || [],\n        } as PageSnapshot;\n\n        const dt = Date.now() - t0;\n        if (dt > 1000) {\n            this.logger.warn(`Performance issue: Narrowing snapshot took ${dt}ms`, { url: snapshot.href, dt });\n        }\n\n        return r;\n    }\n\n    inferSnapshot(snapshot: PageSnapshot): ExtendedSnapshot {\n        const t0 = Date.now();\n        const extendedSnapshot = { ...snapshot } as ExtendedSnapshot;\n        try {\n            const jsdom = new JSDOM(snapshot.html, { url: snapshot.href, virtualConsole });\n            jsdom.window.document.querySelectorAll('svg').forEach((x) => x.innerHTML = '');\n            const links = Array.from(jsdom.window.document.querySelectorAll('a[href]'))\n                .map((x: any) => [x.getAttribute('href'), x.textContent.replace(/\\s+/g, ' ').trim()])\n                .map(([href, text]) => {\n                    if (!text) {\n                        return undefined;\n                    }\n                    try {\n                        const parsed = new URL(href, snapshot.rebase || snapshot.href);\n                        if (parsed.protocol === 'file:' || parsed.protocol === 'javascript:') {\n                            return undefined;\n                        }\n                        return [parsed.toString(), text] as const;\n                    } catch (err) {\n                        return undefined;\n                    }\n                })\n                .filter(Boolean)\n                .reduce((acc, pair) => {\n                    acc[pair![0]] = pair![1];\n                    return acc;\n                }, {} as { [k: string]: string; });\n\n            extendedSnapshot.links = links;\n\n            const imgs = Array.from(jsdom.window.document.querySelectorAll('img[src],img[data-src]'))\n                .map((x: any) => {\n                    let linkPreferredSrc = x.getAttribute('src') || '';\n                    if (linkPreferredSrc.startsWith('data:')) {\n                        const dataSrc = x.getAttribute('data-src') || '';\n                        if (dataSrc && !dataSrc.startsWith('data:')) {\n                            linkPreferredSrc = dataSrc;\n                        }\n                    }\n\n                    return {\n                        src: new URL(linkPreferredSrc, snapshot.rebase || snapshot.href).toString(),\n                        width: parseInt(x.getAttribute('width') || '0'),\n                        height: parseInt(x.getAttribute('height') || '0'),\n                        alt: x.getAttribute('alt') || x.getAttribute('title'),\n                    };\n                });\n\n            extendedSnapshot.imgs = imgs as any;\n        } catch (_err) {\n            void 0;\n        }\n\n        const dt = Date.now() - t0;\n        if (dt > 1000) {\n            this.logger.warn(`Performance issue: Inferring snapshot took ${dt}ms`, { url: snapshot.href, dt });\n        }\n\n        return extendedSnapshot;\n    }\n\n    snippetToElement(snippet?: string, url?: string) {\n        const parsed = new JSDOM(snippet || '', { url, virtualConsole });\n\n        return parsed.window.document.documentElement;\n    }\n\n    runTurndown(turndownService: TurndownService, html: TurndownService.Node | string) {\n        const t0 = Date.now();\n\n        try {\n            return turndownService.turndown(html);\n        } finally {\n            const dt = Date.now() - t0;\n            if (dt > 1000) {\n                this.logger.warn(`Performance issue: Turndown took ${dt}ms`, { dt });\n            }\n        }\n    }\n}\n\nconst jsdomControl = container.resolve(JSDomControl);\n\nexport default jsdomControl;\n"],
  "mappings": "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",
  "names": ["x"]
}
