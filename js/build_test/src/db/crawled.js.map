{
  "version": 3,
  "sources": ["../../../src/db/crawled.ts"],
  "sourcesContent": ["import { Also, parseJSONText, Prop } from 'civkit';\nimport { FirestoreRecord } from '../shared/lib/firestore.js';\nimport type { PageSnapshot } from '../services/puppeteer.js';\n\n@Also({\n    dictOf: Object\n})\nexport class Crawled extends FirestoreRecord {\n    static override collectionName = 'crawled';\n\n    override _id!: string;\n\n    @Prop({\n        required: true\n    })\n    url!: string;\n\n    @Prop({\n        required: true\n    })\n    urlPathDigest!: string;\n\n    @Prop()\n    snapshot?: PageSnapshot & { screenshot: never; pageshot: never; };\n\n    @Prop()\n    screenshotAvailable?: boolean;\n\n    @Prop()\n    pageshotAvailable?: boolean;\n\n    @Prop()\n    snapshotAvailable?: boolean;\n\n    @Prop()\n    createdAt!: Date;\n\n    @Prop()\n    expireAt!: Date;\n\n    static patchedFields = [\n        'snapshot'\n    ];\n\n    static override from(input: any) {\n        for (const field of this.patchedFields) {\n            if (typeof input[field] === 'string') {\n                input[field] = parseJSONText(input[field]);\n            }\n        }\n\n        return super.from(input) as Crawled;\n    }\n\n    override degradeForFireStore() {\n        const copy: any = { ...this };\n\n        for (const field of (this.constructor as typeof Crawled).patchedFields) {\n            if (typeof copy[field] === 'object') {\n                copy[field] = JSON.stringify(copy[field]) as any;\n            }\n        }\n\n        return copy;\n    }\n\n    [k: string]: any;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAM,eAAe,YAAY;AAC1C,SAAS,uBAAuB;AAMzB,IAAM,UAAN,cAAsB,gBAAgB;AAAA,EAqCzC,OAAgB,KAAK,OAAY;AAC7B,eAAW,SAAS,KAAK,eAAe;AACpC,UAAI,OAAO,MAAM,KAAK,MAAM,UAAU;AAClC,cAAM,KAAK,IAAI,cAAc,MAAM,KAAK,CAAC;AAAA,MAC7C;AAAA,IACJ;AAEA,WAAO,MAAM,KAAK,KAAK;AAAA,EAC3B;AAAA,EAES,sBAAsB;AAC3B,UAAM,OAAY,EAAE,GAAG,KAAK;AAE5B,eAAW,SAAU,KAAK,YAA+B,eAAe;AACpE,UAAI,OAAO,KAAK,KAAK,MAAM,UAAU;AACjC,aAAK,KAAK,IAAI,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAC5C;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAGJ;AA5Da,QACO,iBAAiB;AADxB,QAiCF,gBAAgB;AAAA,EACnB;AACJ;AA3BA;AAAA,EAHC,KAAK;AAAA,IACF,UAAU;AAAA,EACd,CAAC;AAAA,GAPQ,QAQT;AAKA;AAAA,EAHC,KAAK;AAAA,IACF,UAAU;AAAA,EACd,CAAC;AAAA,GAZQ,QAaT;AAGA;AAAA,EADC,KAAK;AAAA,GAfG,QAgBT;AAGA;AAAA,EADC,KAAK;AAAA,GAlBG,QAmBT;AAGA;AAAA,EADC,KAAK;AAAA,GArBG,QAsBT;AAGA;AAAA,EADC,KAAK;AAAA,GAxBG,QAyBT;AAGA;AAAA,EADC,KAAK;AAAA,GA3BG,QA4BT;AAGA;AAAA,EADC,KAAK;AAAA,GA9BG,QA+BT;AA/BS,UAAN;AAAA,EAHN,KAAK;AAAA,IACF,QAAQ;AAAA,EACZ,CAAC;AAAA,GACY;",
  "names": []
}
